#!/bin/bash
set -e

function usage() {
    echo 1>&2 "Usage: $0 [-d] [-p PYVER] [-b BASE_IMAGE] [-n IMAGE_NAME ] \\"
    echo 1>&2 "           [-t TAG_PREFIX ] TAG"
    echo 1>&2 "  -d enables dry run (no Docker build or push)"
    echo 1>&2 "  default PYVER=3 (legal values: 2,3)"
    echo 1>&2 "  default BASE_IMAGE='lsstsqre/centos'"
    echo 1>&2 "  default IMAGE_NAME='lsstsqre/jld-lab'"
    echo 1>&2 "  default TAG_PREFIX='7-stack-lsst_distrib-'"
    echo 1>&2 "  typical TAG='w_2017_35'"
    exit 2
}

OPTIND=1
DRY_RUN=0
PYVER=3
BASE_IMAGE="lsstsqre/centos"
IMAGE_NAME="lsstsqre/jld-lab"
TAG_PREFIX="7-stack-lsst_distrib-"
while getopts ':hdp:n:b:t:' opt; do
    case $opt in
	h)
	    usage
	    ;;
	d)
	    DRY_RUN=1
	    ;;
	p)
	    PYVER=${OPTARG}
	    if [ "${PYVER}" -ne 2 ] && [ "${PYVER}" -ne 3 ]; then
		usage
	    fi
	    ;;
	b)
	    BASE_IMAGE=${OPTARG}
	    ;;
	n)
	    IMAGE_NAME=${OPTARG}
	    ;;
	t)
	    TAG_PREFIX=${OPTARG}
	    ;;
	\?)
	    usage
	    ;;
    esac
done
shift $((OPTIND - 1))
TAG=${1}
if [ -z "${TAG}" ] || [ $# -gt 1 ]; then
    usage
fi
VERSION=${TAG//_/}
VERSION=${VERSION/#v/r}
# CRASH OVERRIDE
VERSION="exp_d20180613"
KFILE=lsst_kernel_py${PYVER}.json
sed -e "s|{{PYVER}}|${PYVER}|g" lsst_kernel.json.template > ${KFILE}
sed -e "s|{{BASE_IMAGE}}|${BASE_IMAGE}|g" \
    -e "s|{{IMAGE_NAME}}|${IMAGE_NAME}|g" \
    -e "s|{{TAG_PREFIX}}|${TAG_PREFIX}|g" \
    -e "s|{{PYVER}}|${PYVER}|g" \
    -e "s|{{VERSION}}|${VERSION}|g" \
    -e "s|{{TAG}}|${TAG}|g" \
    < Dockerfile.template > Dockerfile
if [ "${DRY_RUN}" -ne 0 ]; then
    echo 1>&2 "Dry run: Dockerfile written, stopping before build/push."
    exit 0
fi
./bld_1

